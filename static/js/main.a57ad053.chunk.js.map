{"version":3,"sources":["recipe.js","header.js","Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","title","calories","image","ingredients","className","map","ingredient","text","src","alt","Header","Loader","App","useState","recipes","setRecipes","search","setSearch","loading","setLoading","error","setError","query","setQuery","useEffect","axios","get","then","response","console","log","data","hits","catch","onSubmit","e","preventDefault","type","value","onChange","target","recipe","label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAuBeA,EApBA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxC,OACE,sBAAKC,UAAU,aAAf,UACE,6BAAKJ,IACL,6BACGG,EAAYE,KAAI,SAACC,GAAD,OACf,6BAAKA,EAAWC,YAGpB,sBAAKH,UAAU,UAAf,UACE,8BACE,+CACCH,KAEH,qBAAKO,IAAKN,EAAOO,IAAI,YCLdC,G,MATA,WAEX,OACI,wBAAQN,UAAU,SAAlB,SACI,gD,yBCAGO,G,MAJA,WACb,OAAO,qBAAKP,UAAU,WC6ETQ,EA1EH,WACV,IAKA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA0BN,oBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA0BR,mBAAS,WAAnC,mBAAOS,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,IACGC,IADH,0CAEuCJ,EAFvC,mBAZa,WAYb,oBAXc,qCAeXK,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZT,GAAW,GACXJ,EAAWa,EAASG,KAAKC,SAE1BC,OAAM,SAACb,GACNS,QAAQC,IAAIV,GACZC,GAAS,QAEZ,CAACC,IAaJ,OACE,sBAAKlB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,uBAAM8B,SAVQ,SAACC,GACjBA,EAAEC,iBACFjB,GAAW,GACXI,EAASP,GACTC,EAAU,KAMmBb,UAAU,cAArC,UACE,4DACA,sBAAKA,UAAU,aAAf,UACE,uBACEiC,KAAK,OACLjC,UAAU,aACVkC,MAAOtB,EACPuB,SArBW,SAACJ,GACpBlB,EAAUkB,EAAEK,OAAOF,UAsBb,wBAAQlC,UAAU,aAAlB,0BAGJ,sBAAKA,UAAU,mBAAf,UACGc,EACC,cAAC,EAAD,IAEAJ,EAAQT,KAAI,SAACoC,GAAD,OACV,cAAC,EAAD,CAEEzC,MAAOyC,EAAOA,OAAOC,MACrBzC,SAAUwC,EAAOA,OAAOxC,SACxBC,MAAOuC,EAAOA,OAAOvC,MACrBC,YAAasC,EAAOA,OAAOtC,aAJtBsC,EAAOA,OAAOC,UAQxBtB,EAAQ,yDAAkC,YC/DpCuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a57ad053.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./recipe.css\";\r\n\r\nconst Recipe = ({ title, calories, image, ingredients }) => {\r\n  return (\r\n    <div className=\"recipe-box\">\r\n      <h1>{title}</h1>\r\n      <ol>\r\n        {ingredients.map((ingredient) => (\r\n          <li>{ingredient.text}</li>\r\n        ))}\r\n      </ol>\r\n      <div className=\"content\">\r\n        <p>\r\n          <span>Calories - </span>\r\n          {calories}\r\n        </p>\r\n        <img src={image} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React from 'react';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n\r\n    return(\r\n        <header className=\"header\">\r\n            <span>Foodiepy</span>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Loader.css\";\r\n\r\nconst Loader = () => {\r\n  return <div className=\"spin\"></div>;\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from \"react\";\nimport Recipe from \"./recipe\";\nimport Header from \"./header\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\n\nconst App = () => {\n  const APP_ID = \"e67af003\";\n  const APP_KEY = \"cec10aed796957cfa07abda75963a6ce\";\n\n  // const exampleReq = `https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [query, setQuery] = useState(\"chicken\");\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n      )\n      .then((response) => {\n        console.log(response);\n        setLoading(false);\n        setRecipes(response.data.hits);\n      })\n      .catch((error) => {\n        console.log(error);\n        setError(true);\n      });\n  }, [query]);\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <form onSubmit={getSearch} className=\"search-form\">\n        <h2>Your favourite recipe here</h2>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            value={search}\n            onChange={updateSearch}\n          />\n          <button className=\"search-btn\">search</button>\n        </div>\n      </form>\n      <div className=\"recipe-container\">\n        {loading ? (\n          <Loader />\n        ) : (\n          recipes.map((recipe) => (\n            <Recipe\n              key={recipe.recipe.label}\n              title={recipe.recipe.label}\n              calories={recipe.recipe.calories}\n              image={recipe.recipe.image}\n              ingredients={recipe.recipe.ingredients}\n            />\n          ))\n        )}\n        {error ? <p>Can't load. Try again...</p> : null}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}