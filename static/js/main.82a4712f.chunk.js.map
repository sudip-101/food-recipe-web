{"version":3,"sources":["logo.svg","recipe.js","header.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","title","calories","image","ingredients","className","map","ingredient","text","src","alt","Header","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAAe,I,kBCqBAA,EAlBA,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YAErC,OACI,sBAAKC,UAAU,aAAf,UACI,6BAAKJ,IACL,6BACKG,EAAYE,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGxB,sBAAKH,UAAU,UAAf,UACI,8BAAG,+CAAyBH,KAC5B,qBAAKO,IAAKN,EAAOO,IAAI,YCHtBC,G,MATA,WAEX,OACI,wBAAQN,UAAU,SAAlB,SACI,gDC4DGO,EA5DH,WAEV,IAKA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAK,0CACSL,EADT,mBAdf,WAce,oBAbd,qCAYG,cACXM,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAKjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MANA,2CAAH,qDAmBhB,OACE,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,uBAAMyB,SATQ,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAMmBZ,UAAU,cAArC,UACE,4DACA,sBAAKA,UAAU,aAAf,UACE,uBAAO4B,KAAK,OAAO5B,UAAU,aAAa6B,MAAOlB,EAAQmB,SAhB5C,SAAAJ,GACnBd,EAAUc,EAAEK,OAAOF,UAgBb,wBAAQ7B,UAAU,aAAlB,0BAGJ,qBAAKA,UAAU,mBAAf,SACGS,EAAQR,KAAI,SAAA+B,GAAM,OACjB,cAAC,EAAD,CAEEpC,MAAOoC,EAAOA,OAAOC,MACrBpC,SAAUmC,EAAOA,OAAOnC,SACxBC,MAAOkC,EAAOA,OAAOlC,MACrBC,YAAaiC,EAAOA,OAAOjC,aAJtBiC,EAAOA,OAAOC,gBC1ChBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82a4712f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './recipe.css';\r\n\r\nconst Recipe = ({title, calories, image, ingredients}) => {\r\n\r\n    return(\r\n        <div className=\"recipe-box\">\r\n            <h1>{title}</h1>\r\n            <ol>\r\n                {ingredients.map(ingredient => (\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ol>\r\n            <div className=\"content\">\r\n                <p><span>Calories - </span>{calories}</p>\r\n                <img src={image} alt=\"\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Recipe;","import React from 'react';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n\r\n    return(\r\n        <header className=\"header\">\r\n            <span>Foodiepy</span>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Recipe from './recipe';\nimport Header from './header';\n\n\nconst App = () => {\n  \n  const APP_ID = \"e67af003\";\n  const APP_KEY = \"cec10aed796957cfa07abda75963a6ce\";\n\n  // const exampleReq = `https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}`;\n  \n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState('chicken');\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch (\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n  return(\n    <div className=\"App\">\n      <Header />\n      <form onSubmit={getSearch} className=\"search-form\">\n        <h2>Your favourite recipe here</h2>\n        <div className=\"search-box\">\n          <input type=\"text\" className=\"search-bar\" value={search} onChange={updateSearch}/>\n          <button className=\"search-btn\">search</button>\n        </div>\n      </form>\n      <div className=\"recipe-container\">\n        {recipes.map(recipe => (\n          <Recipe\n            key={recipe.recipe.label}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}